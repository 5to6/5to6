#!/usr/bin/env node

var program = require('commander');
var pkg = require('../package.json');
var to6 = require('../');
var glob = require('glob');
var path = require('path');

program
	.usage('[options] <file or dir ...>')
	.description('Transform ES5 code on a file or directory into ES6 code.')
	.version(pkg.version)
	.option('-c, --config [file]', 'Use this config file', '5to6.config.js')
	.option('-o, --show-output', 'Show all of the output as its being written')
	.option('-r, --dry-run', 'Just do a dry run to see the output')
	.option('-d, --out-dir [dir]', 'Directory for the output', '/tmp/5to6')
	.parse(process.argv);

var files = program.args;

if (!files.length) {
	return program.outputHelp();
}

/**
 * Guess if this is a directory.
 * @param file
 */
function isDir(file) {
	var dotPosition = file.indexOf('.');
	var slashPosition = file.lastIndexOf('/');
	return ((dotPosition === 0 && file.length === 1) || dotPosition === -1)  || // . or no dot is usually a dir
		(file.indexOf('/') === 0 || slashPosition == file.length - 1); // start or end with /
}

if (files.length === 1 && isDir(files[0])) {
	files = glob.sync('/**/*.js', {
		root: files[0]
	}).filter(function(name) {
		return name.indexOf('node_modules') === -1;
	});
}

var config;
try {
	config = require(path.resolve(program.config));
} catch(e) {
	config = {};
}

to6(files, {
	transforms: config.transforms,
	showOutput: program.showOutput,
	dryRun: program.dryRun,
	outDir: program.outDir
});
